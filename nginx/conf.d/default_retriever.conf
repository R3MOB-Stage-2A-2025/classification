limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

upstream flask-socketio-retriever {
    server retriever:5001;
}

server {
    listen 443 ssl;
    server_name api.example.com;

    ssl_certificate /etc/nginx/cert.crt;
    ssl_certificate_key /etc/nginx/cert.key;
    ssl_protocols TLSv1.3;

    location / {
        return 301 http://r3mob.fr;
    }

    location /socket.io/ {
        limit_req zone=ip burst=12 delay=8;
        limit_req_status 429;

        proxy_pass         http://flask-socketio-retriever;

        # <Websocket>
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "Upgrade";
        proxy_set_header   Host $host;
        # </Websocket>

        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # Add security headers for APIs according to.
        # https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html
        # The sanbox directive has been addeed according to recommendations
        # from Philippe De Ryck, see e g
        # https://auth0.com/blog/from-zero-to-hero-with-csp/
        # Remove if set by the API application framework or if other caching
        # policy is a requirement.
        add_header Cache-Control no-store always;
        add_header Content-Security-Policy "frame-ancestors 'none'; sandbox" always;
        add_header Content-Type application/json  always;
        add_header Strict-Transport-Security max-age=31536000 always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
    }
}

